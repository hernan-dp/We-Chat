type User {
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  salt: String
  password: String!
}

extend type Query{
  users: [User!]!
  user (id: ID!): User
  currentUser: User
}


extend type Mutation {
  createUser(input: UserInput!): User!
  deleteUser(id: ID!): Boolean!
  signin(data: SigninInput!): AuthenticationResult!
  signup(data: SignupInput!): AuthenticationResult!
}

input UserInput {
  username: String!
  password: String!
}

input SigninInput {
  username: String!
  password: String!
}

input SignupInput {
  firstName: String!
  lastName: String!
  username: String!
  password: String!
}

type AuthenticationResult {
  user: User
  jwt: String
  authError: String
}